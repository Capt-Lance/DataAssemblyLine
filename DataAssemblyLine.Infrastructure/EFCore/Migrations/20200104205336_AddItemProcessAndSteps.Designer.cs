// <auto-generated />
using System;
using DataAssemblyLine.Infrastructure.EFCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAssemblyLine.Infrastructure.EFCore.Migrations
{
    [DbContext(typeof(DataAssemblyLineContext))]
    [Migration("20200104205336_AddItemProcessAndSteps")]
    partial class AddItemProcessAndSteps
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DataAssemblyLine.Domain.Processes.ItemProcess", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FirstStepId")
                        .HasColumnType("int");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxItemsToProcess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FirstStepId");

                    b.ToTable("ItemProcesses");
                });

            modelBuilder.Entity("DataAssemblyLine.Domain.Steps.Step", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ItemProcessId")
                        .HasColumnType("int");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NextStepId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ItemProcessId");

                    b.HasIndex("NextStepId");

                    b.ToTable("Steps");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Step");
                });

            modelBuilder.Entity("DataAssemblyLine.Domain.Steps.HttpStep", b =>
                {
                    b.HasBaseType("DataAssemblyLine.Domain.Steps.Step");

                    b.Property<string>("BodyTemplate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HttpMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("HttpStep");
                });

            modelBuilder.Entity("DataAssemblyLine.Domain.Steps.WaitStep", b =>
                {
                    b.HasBaseType("DataAssemblyLine.Domain.Steps.Step");

                    b.Property<int>("TimeToWaitInSeconds")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("WaitStep");
                });

            modelBuilder.Entity("DataAssemblyLine.Domain.Processes.ItemProcess", b =>
                {
                    b.HasOne("DataAssemblyLine.Domain.Steps.Step", "FirstStep")
                        .WithMany()
                        .HasForeignKey("FirstStepId");
                });

            modelBuilder.Entity("DataAssemblyLine.Domain.Steps.Step", b =>
                {
                    b.HasOne("DataAssemblyLine.Domain.Processes.ItemProcess", null)
                        .WithMany("Steps")
                        .HasForeignKey("ItemProcessId");

                    b.HasOne("DataAssemblyLine.Domain.Steps.Step", "NextStep")
                        .WithMany()
                        .HasForeignKey("NextStepId");
                });
#pragma warning restore 612, 618
        }
    }
}
